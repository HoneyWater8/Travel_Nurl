name: Build and deploy Python app to Azure Web App - Travel-Nuri-instance

on:
  push:
    branches:
      - dev  # 배포할 브랜치
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'  # 원하는 Python 버전

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          source venv/bin/activate  # 가상 환경 활성화
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # - name: Run tests
      #   run: |
      #     source venv/bin/activate  # 가상 환경 활성화
      #     pytest --fail # 또는 unittest 등 사용 중인 테스트 프레임워크에 따라 조정

      - name: Archive application files
        run: |
          zip -r release.zip .  # 필요한 파일들을 압축

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_E582E5D1B3CD4B1FB4B15FE6D4D25ED0 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C4C4CE4DF0A1449B901B666A47FAE087 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_23EE5D2064E74FF084704558659C99C8 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'Travel-Nuri-instance'
          slot-name: 'Production'

        env:
          SERVICE_KEY: ${{ secrets.SERVICE_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
          SESSION_KEY: ${{ secrets.SESSION_KEY }}
          COSMOS_KEY: ${{ secrets.COSMOS_KEY }}
          COSMOS_BLOB_CONNECTION_KEY: ${{ secrets.COSMOS_BLOB_CONNECTION_KEY }}
          COSMOS_END_POINT: ${{ secrets.COSMOS_END_POINT }}